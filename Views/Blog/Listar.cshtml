@{
    ViewData["Title"] = "Posts con Feedback";
}

<div class="container mt-4">
    <div class="text-center mb-4">
        <h1 class="display-4">@ViewData["Title"]</h1>
        <p class="lead">Registro de interacciones de los usuarios con las noticias.</p>
    </div>

    <div id="viewedPostsListContainer">
        <div id="viewedPostsList" class="row">
            <div class="col-12 text-center">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Cargando...</span>
                </div>
                <p>Cargando posts con feedback...</p>
            </div>
        </div>
    </div>
</div>

@section Styles {
    <link rel="stylesheet" href="~/css/list-feedback-styles.css" asp-append-version="true" />
}

@section Scripts {
    <script>
        const viewedPostsListDiv = document.getElementById('viewedPostsList');
        const localApiUrl = '/api/feedback';

        async function fetchAndDisplayViewedPosts() {
            viewedPostsListDiv.innerHTML = `
                <div class="col-12 text-center">
                    <div class="spinner-border text-primary" role="status">
                        <span class="visually-hidden">Cargando...</span>
                    </div>
                    <p>Cargando posts con feedback...</p>
                </div>`;

            try {
                const response = await fetch(localApiUrl, {
                    method: 'GET',
                    headers: {}
                });

                if (!response.ok) {
                    if (response.status === 404) {
                        viewedPostsListDiv.innerHTML = `
                            <div class="col-12">
                                <div class="alert alert-info text-center" role="alert">
                                    Aún no hay posts con feedback registrados.
                                </div>
                            </div>`;
                        console.log("API returned 404, no viewed posts found.");
                    } else {
                        throw new Error(`HTTP error! status: ${response.status}`);
                    }
                    return; 
                }
                
                const feedbacks = await response.json();
                viewedPostsListDiv.innerHTML = '';

                if (!feedbacks || feedbacks.length === 0) {
                    viewedPostsListDiv.innerHTML = `
                        <div class="col-12">
                            <div class="alert alert-info text-center" role="alert">
                                Aún no hay posts con feedback registrados.
                            </div>
                        </div>`;
                    return;
                }
                
                const header = document.createElement('div');
                header.className = 'col-12 mb-3';
                header.innerHTML = '<h2 class="h3">Registro de Feedback</h2>';
                viewedPostsListDiv.appendChild(header);

                feedbacks.forEach(feedback => {
                    const colDiv = document.createElement('div');
                    colDiv.className = 'col-md-6 col-lg-4 mb-4';

                    const card = document.createElement('div');
                    card.className = 'card h-100 feedback-card';
                    
                    const cardBody = document.createElement('div');
                    cardBody.className = 'card-body';

                    let sentimentIcon = '';
                    let sentimentText = feedback.sentimiento || 'No especificado';
                    let sentimentClass = 'text-muted';

                    if (feedback.sentimiento === 'like') {
                        sentimentIcon = '<i class="bi bi-hand-thumbs-up-fill text-success"></i> ';
                        sentimentText = 'Like';
                        sentimentClass = 'text-success fw-bold';
                    } else if (feedback.sentimiento === 'dislike') {
                        sentimentIcon = '<i class="bi bi-hand-thumbs-down-fill text-danger"></i> ';
                        sentimentText = 'Dislike';
                        sentimentClass = 'text-danger fw-bold';
                    }


                    cardBody.innerHTML = `
                        <h5 class="card-title feedback-title">${feedback.titulo || 'Título no disponible'}</h5>
                        <p class="card-text mb-1"><small class="text-muted">ID del Post Original: ${feedback.idPost}</small></p>
                        <ul class="list-unstyled mt-2 mb-0">
                            <li><strong>Usuario:</strong> ${feedback.username || 'Anónimo'}</li>
                            <li><strong>Fecha:</strong> ${new Date(feedback.fecha).toLocaleString()}</li>
                            <li><strong>Sentimiento:</strong> ${sentimentIcon}<span class="${sentimentClass}">${sentimentText}</span></li>
                        </ul>
                    `;
                    
                    card.appendChild(cardBody);
                    colDiv.appendChild(card);
                    viewedPostsListDiv.appendChild(colDiv);
                });

            } catch (error) {
                console.error("Error fetching viewed posts:", error);
                viewedPostsListDiv.innerHTML = `
                    <div class="col-12">
                        <p class="alert alert-danger">Error al cargar los posts con feedback.</p>
                    </div>`;
            }
        }

        document.addEventListener('DOMContentLoaded', fetchAndDisplayViewedPosts);
    </script>
}